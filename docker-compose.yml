version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: community_platform
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    
    # CRITICAL FIX: Defines when the DB is ready 
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d community_platform"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s

  # Next.js Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: app
    restart: unless-stopped
    environment:
      - NODE_ENV=development
      - DATABASE_URL=${DATABASE_URL}
      - NEXTAUTH_SECRET=nekadnedarineko
      - NEXTAUTH_URL=http://localhost:3000
      - WATCHPACK_POLLING=true
    ports:
      - "3000:3000"
      - "5555:5555"
      
    # CRITICAL FIX: Wait for the DB to be ready before starting 'app' 
    depends_on:
      postgres:
        condition: service_healthy
        
    volumes:
      - .:/app
      - /app/node_modules 
      - /app/.next        
      
    # ðŸŒŸ NEW FIX: Runs generate, migrates, SEEDS, then starts Next.js.
    command: [
      "/bin/sh",
      "-c",
      "npx prisma generate && npx prisma migrate deploy --schema prisma/schema.prisma && npm run dev"
      ]

volumes:
  postgres_data:
    driver: local
