{
  "permissions": {
    "allow": [
      "Bash(npx prisma:*)",
      "Bash(npx ts-node:*)",
      "Bash(npm run:*)",
      "Bash(docker-compose exec app npx prisma migrate:*)",
      "Bash(node scripts/check-applications.js)",
      "Bash(node:*)",
      "Bash(npx tsc:*)",
      "Bash(npm install:*)",
      "Bash(dir:*)",
      "Bash(docker-compose restart:*)",
      "Bash(docker-compose up:*)",
      "Bash(docker-compose:*)",
      "WebSearch",
      "mcp__ide__getDiagnostics",
      "Bash(find:*)",
      "Bash(tree:*)",
      "Bash(npx tsx:*)",
      "Read(//d/**)",
      "WebFetch(domain:draculatheme.com)",
      "Bash(npx:*)",
      "mcp__puppeteer__*",
      "mcp__puppeteer__puppeteer_navigate",
      "mcp__puppeteer__puppeteer_screenshot",
      "mcp__puppeteer__puppeteer_click",
      "mcp__puppeteer__puppeteer_evaluate",
      "Bash(curl:*)",
      "Bash(timeout:*)",
      "WebFetch(domain:github.com)",
      "Bash(DATABASE_URL=\"postgresql://postgres:password@localhost:5432/community_platform\" npx prisma migrate dev --name init)",
      "Bash(DATABASE_URL=\"postgresql://postgres:Akvalangists11@localhost:5432/community_platform\" npx prisma migrate dev --name init)",
      "Bash(cat:*)",
      "Bash(git add:*)",
      "Bash(git reset:*)",
      "Bash(git commit -m \"$(cat <<''EOF''\nMajor platform upgrade: mobile-first design, admin system, and comprehensive refactoring\n\nThis commit represents a significant evolution of the platform with mobile-first responsive design, role-based access control, and enhanced content management capabilities.\n\n**Mobile-First Design (Phases 1-4 Complete):**\n- Bottom navigation with 5-tab layout\n- SearchOverlay with hierarchical filtering\n- Touch-optimized forms (44-48px targets)\n- AgendaView for mobile calendar\n- Responsive cards and layouts across all pages\n\n**Admin & Moderation System:**\n- Role-based access control (USER/MODERATOR/COMPANY/ADMIN)\n- Admin dashboard with platform statistics\n- Tag suggestion moderation system\n- News article management\n- Page management system\n\n**Theme System Refactoring:**\n- Coolors vibrant palette integration\n- 6-category color system with semantic naming\n- Full dark mode support\n- Typography guide and component patterns\n\n**Enhanced Features:**\n- Multi-level tag filtering (Level 1/2/3)\n- Improved event creation and calendar views\n- Profile activity tracking\n- Notification system enhancements\n- Footer component (Airbnb-style responsive)\n\n**Documentation:**\n- Updated PROJECT_CONTEXT.md with current status\n- Added MOBILE_FIRST_STATUS.md for optimization tracking\n- Added TYPOGRAPHY_GUIDE.md for component usage\n- Added ROLE_SYSTEM_IMPLEMENTATION.md for RBAC\n\n🤖 Generated with [Claude Code](https://claude.com/claude-code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "Bash(git push:*)",
      "WebFetch(domain:raw.githubusercontent.com)",
      "Bash(npm view:*)",
      "Bash(git clone:*)",
      "Bash(cd:*)",
      "Bash(DATABASE_URL=\"postgresql://postgres:password@localhost:5432/community_platform\" npx prisma migrate dev --name add_tag_parent_multi_mapping)",
      "Bash(git commit -m \"$(cat <<''EOF''\nImplement dynamic hour ranges and late-night event handling for calendar\n\nAdded comprehensive support for late-night events and dynamic hour ranges across all calendar views.\n\n**Dynamic Hour Range System:**\n- Automatically calculates min/max hours based on events for the current day\n- Events ending 00:01-05:59 treated as late-night extensions (show as hours 24-29)\n- Falls back to working hours (8:00-18:00) when no events exist\n- Ensures minimum 8-hour range for usability\n\n**Late-Night Event Handling:**\n- Events ending before 6 AM display continuously on first day (e.g., 22:00-02:00)\n- Consistent behavior across all views (Month, Week, Day, Week Timeline)\n- Events ending at exactly midnight (00:00) show only on first day\n- Multi-day events (ending after 6 AM) continue to span multiple days\n\n**Calendar Grid Improvements:**\n- Fixed month view last row compression issue\n- Fixed day/week timeline event height spanning\n- Fixed event overlap display with proper grid column spanning\n- Added view-specific styling to prevent CSS conflicts\n\n**Technical Changes:**\n- Added hourRange prop throughout calendar component hierarchy\n- Updated prepareCalendarData to handle late-night events in grid views\n- Updated prepareCalendarDataWithTime for timeline views\n- Modified calculateStartAndEndMinute offset calculations\n- Enhanced DayView and WeekTimeView with dynamic hour support\n\n🤖 Generated with [Claude Code](https://claude.com/claude-code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "Bash(git commit -m \"$(cat <<''EOF''\nImplement smart calendar cell click: navigation and event creation\n\nAdded context-aware cell click behavior for calendar views with three modes: navigate, create, and disabled.\n\n**Navigate Mode (Main Calendar Page):**\n- Click date cells in Month/Week views → Switch to Day view\n- Industry-standard zoom navigation pattern\n- Event clicks still open detail modals\n\n**Create Mode (Group Page - Owners Only):**\n- Click date cells → Open create event modal with pre-filled date\n- Fast event creation workflow\n- Calendar always visible (even with 0 events)\n\n**Smart Empty States:**\n- Group calendars always render (no more conditional visibility)\n- Context-aware hint text for owners vs members\n- Owners see \"Click any date to create your first event!\"\n- Members see \"No events scheduled yet\"\n\n**Technical Changes:**\n- Added cellClickMode prop to LightweightCalendarWrapper (''navigate'' | ''create'' | ''disabled'')\n- Added onCellClick and cellClickMode props to ActivityCalendar\n- Updated CreateActivityModal to accept defaultStartDate prop\n- Calendar page uses navigate mode for zoom-in behavior\n- Group page uses create mode for owners, navigate mode for members\n- Removed unused onSelectSlot handler from calendar page\n\n**Files Modified:**\n- components/calendar/LightweightCalendarWrapper.tsx - Cell click mode logic\n- components/calendar/ActivityCalendar.tsx - Prop passthrough\n- components/activities/CreateActivityModal.tsx - Default date support\n- app/calendar/page.tsx - Navigate mode enabled\n- app/groups/[id]/page.tsx - Always-visible calendar with owner create mode\n\n🤖 Generated with [Claude Code](https://claude.com/claude-code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "Bash(git commit -m \"$(cat <<''EOF''\nNavigation consolidation and UI density improvements\n\nMajor refactoring of navigation structure and content organization for clearer user experience.\n\n**Route Consolidation:**\n- Renamed /calendar → /activities (single calendar/events page)\n- Removed /interests page (use /explore only)\n- Removed duplicate /my-groups references\n- Main page (/) now exclusively shows groups (removed public events)\n\n**Navigation Cleanup:**\n- Updated navigation.ts: Groups, Activities, Explore, News\n- Removed \"Home\" label → \"Groups\" (both desktop & mobile)\n- Removed burger navigation drawer (eliminated duplication)\n- Burger now toggles LeftSidebar on mobile (single purpose)\n- Updated all breadcrumbs to use \"Groups\"\n\n**Groups Page Enhancements:**\n- Removed All/Groups/Activities tabs\n- Added quick filter chips:\n  - ⚡ Has Events (groups with upcoming events)\n  - 👥 Accepting Members (not at max capacity)\n  - ✨ New Groups (created in last 30 days)\n- Added view density toggle (Card/Compact)\n- Created GroupCompactView component (Reddit-style table layout)\n- View preference saved to localStorage\n\n**Compact View Features:**\n- Desktop: Table with Icon | Title | Tags | Location | Members | Events\n- Mobile: Condensed stacked cards\n- Shows 2-3x more content than card view\n- Responsive on all screen sizes\n\n**Mobile Improvements:**\n- Burger button opens filter sidebar (no navigation duplication)\n- Removed swipeDrawer dependency\n- Simplified mobile drawer logic\n\n**Technical Changes:**\n- MainContent.tsx: Removed public events, tabs, calendar toggle\n- Added quick filter state management\n- Integrated localStorage for view persistence\n- Header.tsx: Removed Drawer component, cleaned imports\n- app/page.tsx: Fetch from /api/groups (not /api/discover)\n\n🤖 Generated with [Claude Code](https://claude.com/claude-code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "Bash(move:*)",
      "Bash(robocopy:*)",
      "Bash(git rm:*)",
      "Bash(git commit -m \"$(cat <<''EOF''\nAdd comprehensive README.md for GitHub repository\n\nCreated a detailed README.md showcasing the project''s mission, features, and setup instructions.\n\n**Content Highlights:**\n- Project mission and vision (\"Ejam Kopā!\" - connecting Latvian communities)\n- Key features overview (smart discovery, groups, events, stories)\n- 3-level tag hierarchy explanation\n- Mobile-first design showcase\n- Complete tech stack with badges\n- Quick start guide with Docker\n- Development commands and workflows\n- Color system documentation (Coolors palette)\n- Use case examples\n- Current status and roadmap\n- Contributing guidelines\n\n**Structure:**\n- Clear mission statement (not a dating app)\n- Feature highlights with emojis for visual appeal\n- Technology stack breakdown\n- Installation and setup instructions\n- Test credentials for demo access\n- Links to all documentation files\n- Contact information and acknowledgments\n\n**Technical Details:**\n- Docker-first development approach\n- Database operations guide\n- Development vs production workflows\n- Color palette with hex codes\n- Role-based access control overview\n\n🤖 Generated with [Claude Code](https://claude.com/claude-code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "Bash(netstat:*)",
      "Bash(findstr:*)"
    ],
    "deny": [],
    "ask": []
  },
  "enableAllProjectMcpServers": true
}